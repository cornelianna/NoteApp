@model NoteApp.Models.UserProfileViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = $"{Model.Username}'s Profile";
}
    <!-- User's Posts -->
    <div class="profile-header d-flex justify-content-between align-items-center">
        <h3 class="posts-header" style="margin: 20px;"> <img src="~/images/icon.svg" alt="Avatar" style="margin-right: 20px; width: 45px; height: 45px;">@Model.Username's Posts</h3>
        <button type="button" class="buttonstandard btn btn-primary add-friend-btn" style="margin: 30px" data-friend-id="@Model.UserId">Add Friend</button>
    </div>
    
    @if (Model.Posts.Any())
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            @foreach (var post in Model.Posts.OrderByDescending(p => p.CreatedAt))
            {
                <div class="col">
    <div class="card h-100">
        @if (post.ImageData != null && post.ImageData.Length > 0)
        {
            <img src="data:image/jpeg;base64,@Convert.ToBase64String(post.ImageData)" class="card-img-top" alt="Post image">
        }
        <div class="card-body">
            <p class="card-text text-truncate">@post.Content</p>
            <a href="@Url.Action("ViewPost", "Post", new { id = post.Id })" class="stretched-link"></a>
        </div>
    </div>
</div>

            }
        </div>
    }
    else
    {
        <p>@Model.Username hasn't made any posts yet.</p>
    }
    
</div>
@section Scripts {
    <script>
        $(document).on('click', '.add-friend-btn', function () {
            var friendId = $(this).data('friend-id');
            $.post('@Url.Action("AddFriend", "Friend")', { friendId: friendId }, function (response) {
                alert(response.message);
                if (response.success) {
                    location.reload();
                }
            });
        });
    </script>
}